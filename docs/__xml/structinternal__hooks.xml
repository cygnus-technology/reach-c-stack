<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structinternal__hooks" kind="struct" language="C++" prot="public">
    <compoundname>internal_hooks</compoundname>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structinternal__hooks_1a8b8f7ff45faa5da18dd3ccd2a2c8e416" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *CJSON_CDECL *</type>
        <definition>void *CJSON_CDECL * internal_hooks::allocate</definition>
        <argsstring>(size_t size)</argsstring>
        <name>allocate</name>
        <qualifiedname>internal_hooks::allocate</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/cJSON.c" line="158" column="22"/>
      </memberdef>
      <memberdef kind="function" id="structinternal__hooks_1a5cc2dd5383da5f20b19e0f27fa59e123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>internal_hooks::void</definition>
        <argsstring>(CJSON_CDECL *deallocate)(void *pointer)</argsstring>
        <name>void</name>
        <qualifiedname>internal_hooks::void</qualifiedname>
        <param>
          <type>CJSON_CDECL *</type>
          <declname>deallocate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/cJSON.c" line="159" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structinternal__hooks_1a7c3921493fab83f33cd509145d8a5393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *CJSON_CDECL *</type>
        <definition>void *CJSON_CDECL * internal_hooks::reallocate</definition>
        <argsstring>(void *pointer, size_t size)</argsstring>
        <name>reallocate</name>
        <qualifiedname>internal_hooks::reallocate</qualifiedname>
        <param>
          <type>void *</type>
          <declname>pointer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="lib/cJSON.c" line="160" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="lib/cJSON.c" line="156" column="1" bodyfile="lib/cJSON.c" bodystart="157" bodyend="161"/>
    <listofallmembers>
      <member refid="structinternal__hooks_1a8b8f7ff45faa5da18dd3ccd2a2c8e416" prot="public" virt="non-virtual"><scope>internal_hooks</scope><name>allocate</name></member>
      <member refid="structinternal__hooks_1a7c3921493fab83f33cd509145d8a5393" prot="public" virt="non-virtual"><scope>internal_hooks</scope><name>reallocate</name></member>
      <member refid="structinternal__hooks_1a5cc2dd5383da5f20b19e0f27fa59e123" prot="public" virt="non-virtual"><scope>internal_hooks</scope><name>void</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
