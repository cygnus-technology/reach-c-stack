<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="cr__private_8h" kind="file" language="C++">
    <compoundname>cr_private.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="yes">reach-server.h</includes>
    <includes refid="cr__stack_8h" local="yes">cr_stack.h</includes>
    <includedby refid="cr__files_8c" local="yes">cr_files.c</includedby>
    <includedby refid="cr__stack_8c" local="yes">cr_stack.c</includedby>
    <incdepgraph>
      <node id="9">
        <label>i3_error.h</label>
        <link refid="i3__error_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>i3_log.h</label>
        <link refid="i3__log_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>text_colors.h</label>
        <link refid="text__colors_8h_source"/>
      </node>
      <node id="1">
        <label>cr_private.h</label>
        <link refid="cr__private_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cr_stack.h</label>
        <link refid="cr__stack_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>crcb_weak.h</label>
        <link refid="crcb__weak_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>reach_ble_proto_sizes.h</label>
        <link refid="reach__ble__proto__sizes_8h"/>
      </node>
      <node id="5">
        <label>reach-server.h</label>
      </node>
      <node id="13">
        <label>reach.pb.h</label>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
      <node id="11">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>cr_files.c</label>
        <link refid="cr__files_8c"/>
      </node>
      <node id="1">
        <label>cr_private.h</label>
        <link refid="cr__private_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cr_stack.c</label>
        <link refid="cr__stack_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="cr__private_8h_1ad8991609e7b79f8c29f525ff481e33bd" prot="public" static="no" extern="yes" mutable="no">
        <type>cr_ReachMessageTypes</type>
        <definition>cr_ReachMessageTypes pvtCr_continued_message_type</definition>
        <argsstring></argsstring>
        <name>pvtCr_continued_message_type</name>
        <briefdescription>
<para>Private variables controlling the sort of continuing transactions used by file transfers, etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="66" column="33" bodyfile="cr_stack.c" bodystart="120" bodyend="-1" declfile="cr_private.h" declline="66" declcolumn="33"/>
      </memberdef>
      <memberdef kind="variable" id="cr__private_8h_1a6525cf21916ad2b0b996a31aba66d80a" prot="public" static="no" extern="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t pvtCr_num_continued_objects</definition>
        <argsstring></argsstring>
        <name>pvtCr_num_continued_objects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="67" column="33" bodyfile="cr_stack.c" bodystart="121" bodyend="-1" declfile="cr_private.h" declline="67" declcolumn="33"/>
      </memberdef>
      <memberdef kind="variable" id="cr__private_8h_1a4b3a18d3c66251fdfb9093f8708b0fc0" prot="public" static="no" extern="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t pvtCr_num_remaining_objects</definition>
        <argsstring></argsstring>
        <name>pvtCr_num_remaining_objects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="68" column="33" bodyfile="cr_stack.c" bodystart="122" bodyend="-1" declfile="cr_private.h" declline="68" declcolumn="33"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="cr__private_8h_1a19c76f06e3d764396d9767b558dbd15d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pvtCr_challenge_key_is_valid</definition>
        <argsstring>(void)</argsstring>
        <name>pvtCr_challenge_key_is_valid</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the state of the challenge key which may block access to the Reach interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="74" column="10" bodyfile="cr_stack.c" bodystart="303" bodyend="314" declfile="cr_private.h" declline="74" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1aa638044996619f3205c1b07c0e2fc9a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pvtCrFile_discover</definition>
        <argsstring>(const cr_DiscoverFiles *request, cr_DiscoverFilesResponse *response)</argsstring>
        <name>pvtCrFile_discover</name>
        <param>
          <type>const cr_DiscoverFiles *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>cr_DiscoverFilesResponse *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pvtCrFile_ functions support the (optional) files service. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="79" column="9" declfile="cr_private.h" declline="79" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1a2ce04ba8ccecb402a00843ccc49e1f29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pvtCrFile_transfer_init</definition>
        <argsstring>(const cr_FileTransferInit *request, cr_FileTransferInitResponse *response)</argsstring>
        <name>pvtCrFile_transfer_init</name>
        <param>
          <type>const cr_FileTransferInit *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>cr_FileTransferInitResponse *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="81" column="9" declfile="cr_private.h" declline="81" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1afd6f00e1e336103effeb4abc04307af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pvtCrFile_transfer_data</definition>
        <argsstring>(const cr_FileTransferData *dataTransfer, cr_FileTransferDataNotification *response)</argsstring>
        <name>pvtCrFile_transfer_data</name>
        <param>
          <type>const cr_FileTransferData *</type>
          <declname>dataTransfer</declname>
        </param>
        <param>
          <type>cr_FileTransferDataNotification *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="83" column="9" declfile="cr_private.h" declline="83" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1addb5581e5708ccc287beaf7a62594d88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pvtCrFile_transfer_data_notification</definition>
        <argsstring>(const cr_FileTransferDataNotification *request, cr_FileTransferData *dataTransfer)</argsstring>
        <name>pvtCrFile_transfer_data_notification</name>
        <param>
          <type>const cr_FileTransferDataNotification *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>cr_FileTransferData *</type>
          <declname>dataTransfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="85" column="9" declfile="cr_private.h" declline="85" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1a5058fe0db52da996f1cd467ccb2c6ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pvtCr_watchdog_start_timeout</definition>
        <argsstring>(uint32_t msec, uint32_t ticks)</argsstring>
        <name>pvtCr_watchdog_start_timeout</name>
        <param>
          <type>uint32_t</type>
          <declname>msec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
<para>The file service includes a timeout Watchdog. 0 ms disables watchdog. </para>
        </briefdescription>
        <detaileddescription>
<para><linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="92" column="10" declfile="cr_private.h" declline="92" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1a6ccc7c03a84db7f4f77facd4712eac3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pvtCr_watchdog_stroke_timeout</definition>
        <argsstring>(uint32_t ticks)</argsstring>
        <name>pvtCr_watchdog_stroke_timeout</name>
        <param>
          <type>uint32_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="95" column="10" declfile="cr_private.h" declline="95" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1a97af601257972f70d62625410e24fb14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pvtCr_watchdog_end_timeout</definition>
        <argsstring>()</argsstring>
        <name>pvtCr_watchdog_end_timeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="98" column="10" declfile="cr_private.h" declline="98" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1a35c9ee0c8d80ebc36fc9fd564af7de73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pvtCr_watchdog_check_timeout</definition>
        <argsstring>(uint32_t ticks)</argsstring>
        <name>pvtCr_watchdog_check_timeout</name>
        <param>
          <type>uint32_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="102" column="9" declfile="cr_private.h" declline="102" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1a0440e2157e389adf3b9734458ea485f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pvtCrParam_clear_notifications</definition>
        <argsstring>(void)</argsstring>
        <name>pvtCrParam_clear_notifications</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>clears any stale notifications. To be called on connection to client Must be available (empty) in all no-param case. </para>
        </briefdescription>
        <detaileddescription>
<para>pvtCrParam_ functions support the (optional) parameters service. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="108" column="10" bodyfile="cr_params.c" bodystart="644" bodyend="650" declfile="cr_private.h" declline="108" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1a86729ed385bc8a20316714e4590d3bed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pvtCrParam_discover_parameters</definition>
        <argsstring>(const cr_ParameterInfoRequest *, cr_ParameterInfoResponse *)</argsstring>
        <name>pvtCrParam_discover_parameters</name>
        <param>
          <type>const cr_ParameterInfoRequest *</type>
        </param>
        <param>
          <type>cr_ParameterInfoResponse *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="110" column="9" declfile="cr_private.h" declline="110" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1ae6c0f5684b555a4dd087736fc783bbe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pvtCrParam_discover_parameters_ex</definition>
        <argsstring>(const cr_ParameterInfoRequest *, cr_ParamExInfoResponse *)</argsstring>
        <name>pvtCrParam_discover_parameters_ex</name>
        <param>
          <type>const cr_ParameterInfoRequest *</type>
        </param>
        <param>
          <type>cr_ParamExInfoResponse *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="112" column="9" declfile="cr_private.h" declline="112" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1a50f785f9a8bbfa125a9ba4d8fee2e7bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pvtCrParam_read_param</definition>
        <argsstring>(const cr_ParameterRead *, cr_ParameterReadResult *)</argsstring>
        <name>pvtCrParam_read_param</name>
        <param>
          <type>const cr_ParameterRead *</type>
        </param>
        <param>
          <type>cr_ParameterReadResult *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="114" column="9" declfile="cr_private.h" declline="114" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1af2723ddea521ee9c26f59b06d36ab5ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pvtCrParam_write_param</definition>
        <argsstring>(const cr_ParameterWrite *, cr_ParameterWriteResult *)</argsstring>
        <name>pvtCrParam_write_param</name>
        <param>
          <type>const cr_ParameterWrite *</type>
        </param>
        <param>
          <type>cr_ParameterWriteResult *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="116" column="9" declfile="cr_private.h" declline="116" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="cr__private_8h_1aff16cc1fcad73f29013884f20e877076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pvtCrParam_check_for_notifications</definition>
        <argsstring>(void)</argsstring>
        <name>pvtCrParam_check_for_notifications</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>A local function called in <ref refid="cr__stack_8c_1ad28b6060e7d1c0641b0a6571995f656d" kindref="member">cr_process()</ref> to determine whether any parameter notifications need to be generated. Must be available (empty) in all no-param case. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="cr_private.h" line="123" column="10" bodyfile="cr_params.c" bodystart="657" bodyend="776" declfile="cr_private.h" declline="123" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>defines things internal to the Reach stack. In a C++ system these would be private members. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>(c) Copyright 2023 i3 Product Development. All Rights Reserved. The Cygngus Reach firmware stack is shared under an MIT license. </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023-2024<sp/>i3<sp/>Product<sp/>Development</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/********************************************************************************************</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>_<sp/>____<sp/><sp/>___<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/><sp/><sp/>___<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(_)__<sp/>/<sp/>|<sp/>_<sp/>\_<sp/>_<sp/>___<sp/><sp/>__|<sp/>|_<sp/><sp/>_<sp/>__|<sp/>|_<sp/><sp/>|<sp/><sp/><sp/>\<sp/>_____<sp/>_____|<sp/>|___<sp/>_<sp/>__<sp/>_<sp/>__<sp/><sp/>___<sp/>_<sp/>_|<sp/>|_</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/>|<sp/>||_<sp/>\<sp/>|<sp/><sp/>_/<sp/>&apos;_/<sp/>_<sp/>\/<sp/>_`<sp/>|<sp/>||<sp/>/<sp/>_|<sp/><sp/>_|<sp/>|<sp/>|)<sp/>/<sp/>-_)<sp/>V<sp/>/<sp/>-_)<sp/>/<sp/>_<sp/>\<sp/>&apos;_<sp/>\<sp/>&apos;<sp/><sp/>\/<sp/>-_)<sp/>&apos;<sp/>\<sp/><sp/>_|</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/>|_|___/<sp/>|_|<sp/>|_|<sp/>\___/\__,_|\_,_\__|\__|<sp/>|___/\___|\_/\___|_\___/<sp/>.__/_|_|_\___|_||_\__|</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|_|</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----------------------------------</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>i3<sp/>Product<sp/>Development<sp/>2023</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>&quot;cr_private.h&quot;<sp/>defines<sp/>things<sp/>internal<sp/>to<sp/>the<sp/>Reach<sp/>stack.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>Original<sp/>Author:<sp/>Chuck.Peplinski</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>********************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_CR_PRIVATE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CR_PRIVATE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;reach-server.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cr__stack_8h" kindref="compound">cr_stack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>cr_ReachMessageTypes<sp/><ref refid="cr__private_8h_1ad8991609e7b79f8c29f525ff481e33bd" kindref="member">pvtCr_continued_message_type</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvtCr_num_continued_objects;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pvtCr_num_remaining_objects;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cr__private_8h_1a19c76f06e3d764396d9767b558dbd15d" kindref="member">pvtCr_challenge_key_is_valid</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="cr__private_8h_1aa638044996619f3205c1b07c0e2fc9a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cr__private_8h_1aa638044996619f3205c1b07c0e2fc9a0" kindref="member">pvtCrFile_discover</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cr_DiscoverFiles<sp/>*request,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr_DiscoverFilesResponse<sp/>*response);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pvtCrFile_transfer_init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cr_FileTransferInit<sp/>*request,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr_FileTransferInitResponse<sp/>*response);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pvtCrFile_transfer_data(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cr_FileTransferData<sp/>*dataTransfer,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr_FileTransferDataNotification<sp/>*response);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pvtCrFile_transfer_data_notification(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cr_FileTransferDataNotification<sp/>*request,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr_FileTransferData<sp/>*dataTransfer);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="cr__private_8h_1a5058fe0db52da996f1cd467ccb2c6ae3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cr__private_8h_1a5058fe0db52da996f1cd467ccb2c6ae3" kindref="member">pvtCr_watchdog_start_timeout</ref>(uint32_t<sp/>msec,<sp/>uint32_t<sp/>ticks);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resets<sp/>the<sp/>timeout<sp/>period<sp/>to<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pvtCr_watchdog_stroke_timeout(uint32_t<sp/>ticks);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disables<sp/>the<sp/>watchdog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pvtCr_watchdog_end_timeout();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>active,<sp/>compares<sp/>ticks<sp/>to<sp/>expected<sp/>timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>1<sp/>if<sp/>timeout<sp/>occurred</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pvtCr_watchdog_check_timeout(uint32_t<sp/>ticks);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cr__private_8h_1a0440e2157e389adf3b9734458ea485f8" kindref="member">pvtCrParam_clear_notifications</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pvtCrParam_discover_parameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cr_ParameterInfoRequest<sp/>*,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr_ParameterInfoResponse<sp/>*);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pvtCrParam_discover_parameters_ex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cr_ParameterInfoRequest<sp/>*,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr_ParamExInfoResponse<sp/>*);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pvtCrParam_read_param(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cr_ParameterRead<sp/>*,<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr_ParameterReadResult<sp/>*);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pvtCrParam_write_param(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cr_ParameterWrite<sp/>*,<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr_ParameterWriteResult<sp/>*);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>NUM_SUPPORTED_PARAM_NOTIFY<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pvtCrParam_config_param_notify(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cr_ParameterNotifyConfig<sp/>*,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cr_ParameterNotifyConfigResponse<sp/>*);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/></highlight><highlight class="comment">//<sp/>NUM_SUPPORTED_PARAM_NOTIFY<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cr__private_8h_1aff16cc1fcad73f29013884f20e877076" kindref="member">pvtCrParam_check_for_notifications</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>ndef<sp/>_CR_PRIVATE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cr_private.h"/>
  </compounddef>
</doxygen>
